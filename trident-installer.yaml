---
apiVersion: v1
kind: Namespace
metadata:
   name: trident
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: trident-installer
  namespace: trident
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: trident-installer
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cluster-admin
subjects:
- kind: ServiceAccount
  name: trident-installer
  namespace: trident
---
apiVersion: batch/v1
kind: Job
metadata:
  name: trident-installer
  namespace: trident
spec:
  template:
    spec:
      serviceAccountName: trident-installer
      containers:
        - name: trident-installer
          image: fabianborn/trident-installer-addon:latest
          volumeMounts:
            - name: manifests
              mountPath: /manifests
            - name: backend
              mountPath: /backend
          command: ["/bin/sh"]
          args: ["/manifests/install.sh"]
      restartPolicy: OnFailure
      volumes:
        - name: manifests
          configMap:
            name: trident-installer
        - name: backend
          secret:
            secretName: trident-installer-backend
---
apiVersion: v1
kind: Secret
metadata:
  name: trident-installer-backend
  namespace: trident
stringData:
  backend.json: |-
    {
      "version": 1,
      "storageDriverName": "ontap-nas",
      "backendName": "ontapnas",
      "managementLIF": "<ip-mgmt>",
      "dataLIF": "<ip-datalif>",
      "svm": "<svm-name>",
      "username": "trident_user",
      "password": "passw0rd",
      "storagePrefix": "nas"
    }
  backend-san.json: |-
    {
      "version": 1,
      "storageDriverName": "ontap-san",
      "backendName": "ontapsan",
      "managementLIF": "<ip-mgmt>",
      "svm": "<svm-name>",
      "username": "trident_user",
      "password": "passw0rd",
      "storagePrefix": "san",
      "igroupName": "<igroup-name>",
      "useCHAP": false,
      "defaults": {
          "spaceReserve": "volume",
          "spaceAllocation": "false",
          "snapshotPolicy": "none",
          "snapshotReserve": "0"
      }
    }
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: trident-installer
  namespace: trident
data:
  storage_class_trident.yaml: |-
    apiVersion: storage.k8s.io/v1
    kind: StorageClass
    metadata:
      name: trident
      annotations:
        storageclass.kubernetes.io/is-default-class: "true"
    provisioner: netapp.io/trident
    parameters:
      backendType: "ontap-nas"
    allowVolumeExpansion: True
    ---
    apiVersion: storage.k8s.io/v1
    kind: StorageClass
    metadata:
      name: trident_nas
      annotations:
        storageclass.kubernetes.io/is-default-class: "true"
    provisioner: netapp.io/trident
    parameters:
      backendType: "ontap-nas"
    allowVolumeExpansion: True
  install.sh: |-
    set -ex
    sleep 3 
    kubectl apply -f /opt/trident-installer/deploy/crds/trident.netapp.io_tridentorchestrators_crd_post1.16.yaml
    kubectl apply -f /opt/trident-installer/deploy/bundle.yaml
    kubectl create -f /opt/trident-installer/deploy/crds/tridentorchestrator_cr.yaml 
    sleep 5
    i="0"
    until  kubectl describe torc trident | grep "Status:.*Installed"
    do
      sleep 10
      if [ ! $i -lt 40 ]; then
        exit 1
      fi
    done
    for backendfile in /backend/*.json; do
    	/opt/trident-installer/tridentctl -n trident create backend -f /backend/$(basename $backendfile)
    done
    kubectl apply -f /manifests/storage_class_trident.yaml
    kubectl delete job.batch -n trident trident-installer
